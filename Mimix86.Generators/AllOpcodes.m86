# Contains all the opcodes known to Mimix86
# These are used to generate the `Opcode` enum and `OpcodeMap` collection class

# This file uses the simple DSL with the major nodes in this order:
#  - mnemonic (used with operands to name the enum member)
#  - operands
#  - encoding
#  - required CPU level

# 8086+
ADD  [Eb Gb] [00 /r]    ..
ADD  [Ew Gw] [01 /r]    ..
ADD  [Gb Eb] [02 /r]    ..
ADD  [Gw Ew] [03 /r]    ..
ADD  [AL Ib] [04 ib]    ..
ADD  [AX Iw] [05 iw]    ..
PUSH [ES]    [06]       ..
POP  [ES]    [07]       ..
OR   [Eb Gb] [08 /r]    ..
OR   [Ew Gw] [09 /r]    ..
OR   [Gb Eb] [0A /r]    ..
OR   [Gw Ew] [0B /r]    ..
OR   [AL Ib] [0C ib]    ..
OR   [AX Iw] [0D iw]    ..
PUSH [CS]    [0E]       ..
POP  [CS]    [0F]       ..0
ADC  [Eb Gb] [10 /r]    ..
ADC  [Ew Gw] [11 /r]    ..
ADC  [Gb Eb] [12 /r]    ..
ADC  [Gw Ew] [13 /r]    ..
ADC  [AL Ib] [14 ib]    ..
ADC  [AX Iw] [15 iw]    ..
PUSH [SS]    [16]       ..
POP  [SS]    [17]       ..
SBB  [Eb Gb] [18 /r]    ..
SBB  [Ew Gw] [19 /r]    ..
SBB  [Gb Eb] [1A /r]    ..
SBB  [Gw Ew] [1B /r]    ..
SBB  [AL Ib] [1C ib]    ..
SBB  [AX Iw] [1D iw]    ..
PUSH [DS]    [1E]       ..
POP  [DS]    [1F]       ..
AND  [Eb Gb] [20 /r]    ..
AND  [Ew Gw] [21 /r]    ..
AND  [Gb Eb] [22 /r]    ..
AND  [Gw Ew] [23 /r]    ..
AND  [AL Ib] [24 ib]    ..
AND  [AX Iw] [25 iw]    ..
# [26] is ES: prefix
DAA  []      [27]       ..
SUB  [Eb Gb] [28 /r]    ..
SUB  [Ew Gw] [29 /r]    ..
SUB  [Gb Eb] [2A /r]    ..
SUB  [Gw Ew] [2B /r]    ..
SUB  [AL Ib] [2C ib]    ..
SUB  [AX Iw] [2D iw]    ..
# [2E] is CS: prefix
DAS  []      [2F]       ..
XOR  [Eb Gb] [30 /r]    ..
XOR  [Ew Gw] [31 /r]    ..
XOR  [Gb Eb] [32 /r]    ..
XOR  [Gw Ew] [33 /r]    ..
XOR  [AL Ib] [34 ib]    ..
XOR  [AX Iw] [35 iw]    ..
# [36] is SS: prefix
AAA  []      [37]       ..
CMP  [Eb Gb] [38 /r]    ..
CMP  [Ew Gw] [39 /r]    ..
CMP  [Gb Eb] [3A /r]    ..
CMP  [Gw Ew] [3B /r]    ..
CMP  [AL Ib] [3C ib]    ..
CMP  [AX Iw] [3D iw]    ..
# [3E] is DS: prefix
AAS  []      [3F]       ..
INC  [Zw]    [40+o]     ..
DEC  [Zw]    [48+o]     ..
PUSH [Zw]    [50+o]     ..
POP  [Zw]    [58+o]     ..
Jcc  [Jb]    [70+cc ib] .. # NOTE: mirrored to 60+cc on 8086
ADD  [Eb Ib] [80 /0]    .. # NOTE: 80 /r mirrored to 82 /r
ADD  [Ew Iw] [81 /0]    ..
ADD  [Ew Ib] [83 /0]    ..
OR   [Eb Ib] [80 /1]    ..
OR   [Ew Iw] [81 /1]    ..
OR   [Ew Ib] [83 /1]    ..
ADC  [Eb Ib] [80 /2]    ..
ADC  [Ew Iw] [81 /2]    ..
ADC  [Ew Ib] [83 /2]    ..
SBB  [Eb Ib] [80 /3]    ..
SBB  [Ew Iw] [81 /3]    ..
SBB  [Ew Ib] [83 /3]    ..
AND  [Eb Ib] [80 /4]    ..
AND  [Ew Iw] [81 /4]    ..
AND  [Ew Ib] [83 /4]    ..
SUB  [Eb Ib] [80 /5]    ..
SUB  [Ew Iw] [81 /5]    ..
SUB  [Ew Ib] [83 /5]    ..
XOR  [Eb Ib] [80 /6]    ..
XOR  [Ew Iw] [81 /6]    ..
XOR  [Ew Ib] [83 /6]    ..
CMP  [Eb Ib] [80 /7]    ..
CMP  [Ew Iw] [81 /7]    ..
CMP  [Ew Ib] [83 /7]    ..
TEST [Eb Gb] [84 /r]    ..
TEST [Ew Gw] [85 /r]    ..
XCHG [Eb Gb] [86 /r]    ..
XCHG [Ew Gw] [87 /r]    ..
